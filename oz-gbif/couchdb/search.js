{"_id":"_design/search","_rev":"14-58f7b8267044acae70df408641a1a0e7","views":{"codes":{"reduce":"_sum","map":"/*\n\nShared code\n\n\n*/\n//----------------------------------------------------------------------------------------\n// http://stackoverflow.com/a/25715455\nfunction isObject(item) {\n  return (typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n//----------------------------------------------------------------------------------------\n// http://stackoverflow.com/a/21445415\nfunction uniques(arr) {\n  var a = [];\n  for (var i = 0, l = arr.length; i < l; i++)\n    if (a.indexOf(arr[i]) === -1 && arr[i] !== '')\n      a.push(arr[i]);\n  return a;\n}\n\n\n\n//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\n\n//----------------------------------------------------------------------------------------\n// Return true if value is not empty, tests for strange stuff such as \"[Not Stated]\"\nfunction not_empty(value) {\n\tvar empty = true;\n\t\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\tif (value == null) {\n\t\treturn false;\n\t}\n\n\tif (value.match(/\\[Not Stated\\]/i)) {\n\t\treturn false;\n\t}\n\t\n\treturn empty;\n\n\n}\n\n//----------------------------------------------------------------------------------------\n// Get a list of specimen codes and other potential specimen identifiers\nfunction specimen_codes(doc) {\n  var codes = [];\n\n  // By default we simply output institutionCode and catalogNumber,\n  // but for some we need special processing. Setting output_default to false\n  // means that the simple institutionCode + catalogNumber\n  // doesn't apply.\n  var output_default = true;\n\n  // Here we do any special processing do create codes seen in the wild\n  switch (doc.message.datasetKey) {\n\n    // AMNH\n    // Birds\n    case '96c93a1e-f762-11e1-a439-00145eb45e9a':\n      var catalogNumber = doc.message.catalogNumber;\n      catalogNumber = catalogNumber.replace(/DOT-/i, '');\n      catalogNumber = catalogNumber.replace(/SKIN-/i, '');\n      codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      break;\n\n      // AM\n    case 'dce8feb0-6c89-11de-8225-b8a03c50a862':\n      var catalogNumber = doc.message.catalogNumber;\n      catalogNumber = catalogNumber.replace(/\\\\./, '');\n      codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      if (catalogNumber.match(/^R/)) {\n        codes.push(doc.message.institutionCode + catalogNumber);\n      }\n      codes.push('Australian Museum ' + catalogNumber);\n      output_default = false;\n      break;\n\n      // ANWC\n    case '0debafd0-6c8a-11de-8225-b8a03c50a862':\n      if (doc.message.catalogNumber.match(/^[A-Z]/)) {\n        codes.push(doc.message.institutionCode + ':' + doc.message.catalogNumber.replace(/^[A-Z][0]*/, ''));\n      }\n      break;\n\n      // CASIZ\n    case '44bcde48-ac71-46f2-bf73-24fc3c008b6c':\n      var catalogNumber = doc.message.catalogNumber.replace(/\\\\.0/, '');\n      codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      // CAS:CASIZ 175448 \n      codes.push(doc.message.institutionCode + ':CASIZ ' + catalogNumber);\n      output_default = false;\n      break;\n\n      // CAS herps\n    case 'cece4fc2-1fec-4bb5-a335-7252548e3f0b':\n      codes.push(doc.message.institutionCode + doc.message.catalogNumber);\n      codes.push(doc.message.institutionCode + ':Herp:' + doc.message.catalogNumber);\n      break;\n      // CAS Ichs\n        \n    case '5d6c10bd-ea31-4363-8b79-58c96d859f5b':\n          codes.push(doc.message.institutionCode + doc.message.catalogNumber);    \n      codes.push(doc.message.institutionCode + ':Ich:' + doc.message.catalogNumber);    \n      break;\n\n      // CSIRO\n      // CSIRO Ichthyology provider for OZCAM\n    case '18c93d12-34fb-4d3f-903c-b77215a1dcc9':\n      if (doc.message.catalogNumber.match(/^H/)) {\n        // BOLD cites them like this\n        codes.push(doc.message.institutionCode + ' H ' + doc.message.catalogNumber.replace(/^H/, ''));\n      }\n      break;\n\n      // FMNH\n    case 'e48d6c49-34a3-4df6-8206-121c061f190d':\n        codes.push(doc.message.institutionCode + ':HERP:' + doc.message.catalogNumber);\n      break;\n\n      // Kew\n    case 'cd6e21c8-9e8a-493a-8a76-fbf7862069e5':\n        codes.push(doc.message.catalogNumber);\n      output_default = false;\n      break;\n\n      // MHNG\n    case '5a659248-1f70-11e3-b2c5-00145eb45e9a':\n      if (doc.message.catalogNumber.match(/^MHNG-MAM-/)) {\n        var catalogNumber = doc.message.catalogNumber;\n        catalogNumber = catalogNumber.replace(/MHNG-MAM-/, '');  \n        codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n\n        // for BOLD\n        catalogNumber = catalogNumber.replace(/\\\\./, '');  \n        codes.push(doc.message.institutionCode + '-' + catalogNumber);\n        output_default = false;\n      }\n      break;\n\n      // MNHN\n    case '1b2af425-9f6f-4b28-a008-af9757317c4c':\n      if (doc.message.catalogNumber.match(/^ENSIF/)) {\n        var catalogNumber = doc.message.catalogNumber;\n        catalogNumber = catalogNumber.replace(/ENSIF/, '');  \n        codes.push(doc.message.institutionCode + ':ENSIF ' + catalogNumber);\n      }\n      break;\n      // MHNH birds\n    case 'ba0c03ab-fa61-4a3c-8db7-35c8c3454168':\n      if (doc.message.catalogNumber.match(/^MO/)) {\n        var catalogNumber = doc.message.catalogNumber;\n        catalogNumber = catalogNumber.replace(/MO-/, '');  \n        codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      }\n      break;\n\n      // MCZ\n    case '4bfac3ea-8763-4f4b-a71a-76a6f5f243d3':\n      if (doc.message.catalogNumber.match(/^[R]-/)) {\n        codes.push(doc.message.institutionCode + ' ' + doc.message.catalogNumber.replace(/^[R]-/, ''));\n      }\n      break;\n\n      // MVZ\n    case '09c4287e-e6d5-4552-a07f-bff8a00833d8':\n         codes.push(doc.message.institutionCode + ':Herp:' + doc.message.catalogNumber);   \n      break;\n\n      // NMV D\n    case '39905320-6c8a-11de-8226-b8a03c50a862':\n      codes.push(doc.message.institutionCode + doc.message.catalogNumber.replace(/ /, ''));\n      codes.push('NMV<AUS>:' + doc.message.institutionCode + doc.message.catalogNumber.replace(/ /, ''));\n      break;\n\n      // OMNH Osaka Museum of Natural History fish\n    case '849f0a76-f762-11e1-a439-00145eb45e9a':\n      if (doc.message.collectionCode == 'P') {\n        codes.push(doc.message.institutionCode + '-' + doc.message.collectionCode + ' ' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n        output_default = false;\n      }\n      break;\n\n      // OSUC\n      // C.A. Triplehorn Insect Collection, Ohio State University, Columbus, OH (OSUC)\n    case '84ab7b76-f762-11e1-a439-00145eb45e9a':\n      codes.push(doc.message.catalogNumber);\n      output_default = false;\n      break;\n      \n\n      // TTU\n      // mammals\n    case '854f70cc-55e3-4af2-9417-0f47d6c7902d':\n      // output field numbers as tissue numbers\n      if (doc.message.fieldNumber) {\n        codes.push('TK' + doc.message.fieldNumber);\n        codes.push('TK ' + doc.message.fieldNumber);\n      }\n      break;\n\n      // UAM\n      // mammals\n    case '377be098-626f-4cc2-b4b5-35700050669a':\n      codes.push(doc.message.institutionCode + ':Mamm:' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n      break;\n\n      // UF (FLMNH)\n      // Ichthyology\n    case 'eccf4b09-f0c8-462d-a48c-41a7ce36815a':\n      codes.push('FLMNH ' + doc.message.catalogNumber);\n      codes.push('UF' + doc.message.catalogNumber);\n      break;\n      // Inverts (e.g., moolluscs)\n    case '85b1cfb6-f762-11e1-a439-00145eb45e9a':\n      codes.push('UF ' + doc.message.catalogNumber.replace(/\\\\-\\\\w+$/, ''));\n      break;\n\n      // USNM\n    case '5df38344-b821-49c2-8174-cf0f29f4df0d':\n      codes.push(doc.message.institutionCode + ' ' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n\n      switch (doc.message.collectionCode) {\n        case 'Amphibians & Reptiles':\n          codes.push(doc.message.institutionCode + ':Herp:' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        case 'Birds':\n          codes.push(doc.message.institutionCode + ':Birds:' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        case 'Fishes':\n          codes.push(doc.message.institutionCode + ':Fish:' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        case 'Mammals':\n          codes.push(doc.message.institutionCode + ':MAMM:' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        default:\n          break;\n      }\n      output_default = true;\n      break;\n\n      // UTA\n      // Herpetology\n    case '8d88898d-a2c4-4616-a1fe-431b9c06b671':\n      switch (doc.message.collectionCode) {\n        case 'UTA-A':\n          codes.push(doc.message.institutionCode + ' A' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          codes.push(doc.message.institutionCode + ' A-' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        case 'UTA-R':\n          codes.push(doc.message.institutionCode + ' R' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          codes.push(doc.message.institutionCode + ' R-' + doc.message.catalogNumber.replace(/\\\\.\\\\d+/, ''));\n          break;\n        default:\n          break;\n      }\n      break;\n\n      // UWBM \n      // birds\n    case '830fd460-f762-11e1-a439-00145eb45e9a':\n      break;\n\n      // UZA\n    case '96c25708-f762-11e1-a439-00145eb45e9a':\n      codes.push(doc.message.catalogNumber);\n      output_default = false;\n      break;\n\n      // WAM\n    case '7c93d290-6c8b-11de-8226-b8a03c50a862':\n      codes.push(doc.message.institutionCode + doc.message.catalogNumber);\n      codes.push(doc.message.institutionCode + ' ' + doc.message.catalogNumber.replace(/^R/, ''));\n\n      if (doc.message.collectionCode == \"REPT\") {\n        // Number-only codes need R prefix\n        if (doc.message.catalogNumber.match(/^\\\\d+/)) {\n          codes.push(doc.message.institutionCode + 'R' + doc.message.catalogNumber);\n          codes.push(doc.message.institutionCode + ' R' + doc.message.catalogNumber);\n        }\n      }\n      break;\n\n      // YPM Inverts\n    case '854e35e6-f762-11e1-a439-00145eb45e9a':\n      // YPM entomology\n    case '96404cc2-f762-11e1-a439-00145eb45e9a':\n      // YPM fish\n    case '96419bea-f762-11e1-a439-00145eb45e9a':\n      // YPM Herps\n    case '861d3d64-f762-11e1-a439-00145eb45e9a':\n      // YPM birds\n    case '854cf79e-f762-11e1-a439-00145eb45e9a':\n      // YPM mammals\n    case '854f602e-f762-11e1-a439-00145eb45e9a':\n      var parts = doc.message.catalogNumber.match(/(YPM)\\\\s+([A-Z]+)\\\\s+(0+)?(\\\\d+)/);\n      if (parts) {\n        var collection = parts[2];\n        var catalogNumber = parts[4];\n\n        // YPM \\\\d+\n        codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n        // YPM as is\n        codes.push(doc.message.catalogNumber);\n        // DwC triple\n        collection = collection.substr(0, Math.min(3, collection.length));\n        codes.push(doc.message.institutionCode + ':' + collection + ':' + catalogNumber);\n      }\n      output_default = false;\n      break;\n      \n      // ZMA\n      // ZMA fish types\n    case '903b7df0-6166-11de-84bf-b8a03c50a862':\n      var catalogNumber  = doc.message.catalogNumber;\n      catalogNumber = catalogNumber.replace(/Pisces_/, '');\n      catalogNumber = catalogNumber.replace(/,/, '.');\n      codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      output_default = true;\n      break;\n\n      // ZMUC\n    case 'cb643105-2e6b-403d-a23b-2c8128d1f97c':\n      codes.push(doc.message.catalogNumber.replace(/-/, ' '));\n      output_default = false;\n      break;\n\n      // ZMUC birds\n    case 'af3bce08-0599-45a6-9bfc-08188bcd868e':\n      var catalogNumber = doc.message.catalogNumber.replace(/AVES-0?/, '');\n      codes.push(doc.message.institutionCode + ' ' + catalogNumber);\n      // see doi:10.1007/s10336-006-0082-4\n      if (catalogNumber.length == 5) {\n        codes.push(doc.message.institutionCode + ' ' + catalogNumber.substr(0, 2) + '.' + catalogNumber.substr(2, 3));\n      }\n      output_default = false;\n      break;\n\n      // Zoologische Staatssammlung Muenchen\n      // International Barcode of Life (iBOL) - Barcode of Life Project Specimen Data\n    case 'f29ab192-5964-40ae-a397-fa48ffdf0661':\n      codes.push(doc.message.catalogNumber);\n      output_default = false;\n      break;\n\n    default:\n      output_default = true; // for now while we debug, make true when all done\n      break;\n  }\n\n\n  // add any other useful records\n  if (doc.message.otherCatalogNumbers) {\n    codes.push(doc.message.otherCatalogNumbers);\n  }\n\n  if (doc.message.recordNumber) {\n    codes.push(doc.message.recordNumber);\n    \n    if (doc.message.recordedBy) {\n    \tcodes.push(doc.message.recordedBy + ' ' + doc.message.recordNumber);\n    }\n  }\n\n\t\n  if (output_default) {\n    if (doc.message.institutionCode && doc.message.catalogNumber) {\n      codes.push(doc.message.institutionCode + ' ' + doc.message.catalogNumber);\n    }\n\n    // For when we have complete specimen code as catalogue number\n    if (doc.message.catalogNumber) {\n      codes.push(doc.message.catalogNumber);\n    }\n  }\n\n  // Make unique\n  var unique = [];\n  for (var i = 0; i < codes.length; i++) {\n    if (unique.indexOf(codes[i]) == -1) {\n      unique.push(codes[i]);\n    }\n  }\n\n  return unique;\n}\n\n//----------------------------------------------------------------------------------------\nfunction message(doc) {\n\tvar codes = specimen_codes(doc);\n\t\n\tfor (var i in codes) {\n\t\temit(doc._id, codes[i]);\n\t}\n\n\n}\n\nfunction (doc) {\n   if (doc._id.match(/gbif.org/)) {\n\tmessage(doc);\n   }\n}\n// END COUCHDB VIEW\n\n"},"ipni-style":{"map":"\n//----------------------------------------------------------------------------------------\nfunction message(doc) {\n\tvar parts = [];\n\t\n  if (doc.message.recordedBy) {\n    var s = doc.message.recordedBy;\n    s = s.replace(/[\\|;]/g, ',');\n    parts.push(s);\n  }\n  \n  if (doc.message.recordNumber) {\n    parts.push(doc.message.recordNumber);\n  }  \n  \n  if (doc.message.institutionCode) {\n    parts.push(doc.message.institutionCode);\n  }    \n  \n  if (doc.message.typeStatus) {\n    switch (doc.message.typeStatus) {\n      case 'HOLOTYPE':\n         parts.push('(holo)');\n          break;\n      case 'ISOTYPE':\n          parts.push('(iso)');\n          break;\n      case 'LECTOTYPE':\n          parts.push('(lecto)');\n          break;\n      case 'PARATYPE':\n          parts.push('(para)');\n          break;\n      default:\n        break;\n    }\n    \n  }\n\t\n\tif (parts.length > 0) {\n\t\temit(doc._id, parts.join(' '));\n\t}\n\n\n}\n\nfunction (doc) {\n   if (doc._id.match(/gbif.org/)) {\n\tmessage(doc);\n   }\n}\n// END COUCHDB VIEW\n\n"}},"language":"javascript"}

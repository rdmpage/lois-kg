{"_id":"_design/work","_rev":"2-0fde1ec7070be9c820aa438861ad30db","lists":{"triples":"function(head,req) { var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { send(row.value); } }","values":"function(head,req) { var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { send(row.value + \"\\n\"); } }"},"views":{"nt":{"map":"/*\n\nShared code\n\n\n*/\n//----------------------------------------------------------------------------------------\n// http://stackoverflow.com/a/25715455\nfunction isObject(item) {\n  return (typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n//----------------------------------------------------------------------------------------\n// http://stackoverflow.com/a/21445415\nfunction uniques(arr) {\n  var a = [];\n  for (var i = 0, l = arr.length; i < l; i++)\n    if (a.indexOf(arr[i]) === -1 && arr[i] !== '')\n      a.push(arr[i]);\n  return a;\n}\n\n\n//----------------------------------------------------------------------------------------\n// Store a triple with optional language code\nfunction triple(subject, predicate, object, language) {\n  var triple = [];\n  triple[0] = subject;\n  triple[1] = predicate;\n  triple[2] = object;\n\n  if (typeof language === 'undefined') {} else {\n    triple[3] = language;\n  }\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Enclose triple in suitable wrapping for HTML display or triplet output\nfunction wrap(s, html) {\n  if (s) {\n\n    if (s.match(/^(http|urn|_:)/)) {\n      s = s.replace(/\\\\_/g, '_');\n\n      // handle < > in URIs such as SICI-based DOIs\n      s = s.replace(/</g, '%3C');\n      s = s.replace(/>/g, '%3E');\n\n      if (html) {\n        s = '&lt;' + s + '&gt;';\n      } else {\n        s = '<' + s + '>';\n      }\n    } else {\n      s = '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n    }\n  }\n  return s;\n}\n\n//----------------------------------------------------------------------------------------\n// https://css-tricks.com/snippets/javascript/htmlentities-for-javascript/\nfunction htmlEntities(str) {\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n//----------------------------------------------------------------------------------------\nfunction detect_language(s) {\n  var language = null;\n  var matched = 0;\n  var parts = [];\n\n  var regexp = [];\n\n  // https://gist.github.com/ryanmcgrath/982242\n  regexp['ja'] = /[\\u3000-\\u303F]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uFF00-\\uFFEF]|[\\u4E00-\\u9FAF]|[\\u2605-\\u2606]|[\\u2190-\\u2195]|\\u203B/g;\n  // http://hjzhao.blogspot.co.uk/2015/09/javascript-detect-chinese-character.html\n  regexp['zh'] = /[\\u4E00-\\uFA29]/g;\n  // http://stackoverflow.com/questions/32709687/js-check-if-string-contains-only-cyrillic-symbols-and-spaces\n  regexp['ru'] = /[\\u0400-\\u04FF]/g;\n\n  for (var i in regexp) {\n    parts = s.match(regexp[i]);\n\n    if (parts != null) {\n      if (parts.length > matched) {\n        language = i;\n        matched = parts.length;\n      }\n    }\n  }\n\n  // require a minimum matching\n  if (matched < 2) {\n    language = null;\n  }\n\n  return language;\n\n}\n\n//----------------------------------------------------------------------------------------\nfunction output(doc, triples) {\n  // CouchDB\n  for (var i in triples) {\n    var s = 0;\n    var p = 1;\n    var o = 2;\n\n    var lang = 3;\n\n    var nquads = wrap(triples[i][s], false) +\n      ' ' + wrap(triples[i][p], false) +\n      ' ' + wrap(triples[i][o], false);\n    if (triples[i][lang]) {\n      nquads += '@' + triples[i][lang];\n    }\n\n    nquads += ' .' + \"\\n\";\n\n    // use cluster_id as the key so triples from different versions are linked together\n    emit(doc._id, nquads);\n    //console.log(nquads);\n  }\n}\n\n//----------------------------------------------------------------------------------------\n// START COUCHDB VIEW\nfunction message(doc) {\n    if (doc.message.DOI) {\n    \n\t\tvar doi = doc.message.DOI.toLowerCase();\n\t\t\n\t\t// clean up badness\n\t\t// e.g. 0000-0002-4662-0227/work/29262377\n\t\tdoi = doi.replace(/https?:\\/\\/(dx\\.)?doi.org\\/\\s*/, '');\n\t\tdoi = doi.replace(/doi:?\\s*/i, '');\n\t\tdoi = doi.replace(/\\[pii\\]/, '');\n\t\tdoi = doi.replace(/\\s+$/, '');\t\t\n\t\t\n\n    \n    \t// use ORCID work id\n      var subject_id = 'https://orcid.org/' + doc._id;\n      \n      // use DOI\n      if (1) {\n        subject_id = 'https://doi.org/' + doi;\n      }\n    \n      for (var i in doc.message.author) {\n        if (doc.message.author[i].ORCID) {\n          // ignore cases where author is actually all the authors\n          var go = true;\n          if (doc.message.author[i].literal.match(/ and /)) {\n            go = false;\n          }\n          // et al.\n          if (doc.message.author[i].literal.match(/ et al/)) {\n            go = false;\n          }\n          \n          if (go) {\n\n            // we want simple triples linking name to position in author list\n            var triples = [];\n            var type = '';\n            \n            // type of work\n            if (doc.message.type) {\n\t\t\t\tswitch (doc.message.type) {\n\t\t\t\t  case 'article-journal':\n\t\t\t\t  case 'journal-article':\n\t\t\t\t\ttype = 'http://schema.org/ScholarlyArticle';\n\t\t\t\t\tbreak;\n\t\t\t\t  default:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} \n\t\t\t\n            if (doc.message.title) {\n\t\t\t\ttriples.push(triple(\n\t\t\t\t  subject_id,\n\t\t\t\t  'http://schema.org/name',\n\t\t\t\t  doc.message.title));\n\t\t\t}\n\t\t\t                        \n            // identifier \n\t\t\tvar identifier_id = subject_id + '#doi';\n\n\t\t\ttriples.push(triple(\n\t\t\t  subject_id,\n\t\t\t  'http://schema.org/identifier',\n\t\t\t  identifier_id));\n\n\t\t\ttriples.push(triple(\n\t\t\t  identifier_id,\n\t\t\t  'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n\t\t\t  'http://schema.org/PropertyValue'));\n\n\t\t\ttriples.push(triple(\n\t\t\t  identifier_id,\n\t\t\t  'http://schema.org/propertyID',\n\t\t\t  'doi'));\n\t\t\t  \n\n\t\t\ttriples.push(triple(\n\t\t\t  identifier_id,\n\t\t\t  'http://schema.org/value',\n\t\t\t  doi\n\t\t\t));                \n            \n            var index = parseInt(i) + 1;\n            var role_id    = subject_id + '#role-' + index;\n            //var creator_id = 'https://orcid.org/' + doc.message.author[i].ORCID;\n            var creator_id = subject_id + '#creator-' + index;            \n \n            triples.push(triple(\n            \tsubject_id,\n                'http://schema.org/creator',\n                role_id)\n                );\n\n            triples.push(triple(\n            \trole_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/Role')\n                );\n\n            triples.push(triple(\n            \trole_id,\n                'http://schema.org/roleName',\n                String(index)\n                ));\n\n            triples.push(triple(\n            \trole_id,\n                'http://schema.org/creator',\n                creator_id\n                ));\n                                \n\t\t\t  // type, need to handle organisations as authors\n\t\t\t  triples.push(triple(\n\t\t\t  \tcreator_id,\n\t\t\t\t'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n\t\t\t\t'http://schema.org/Person'));\n\n\t\t\t  triples.push(triple(\n\t\t\t  \tcreator_id,\n\t\t\t\t'http://schema.org/name',\n\t\t\t\tdoc.message.author[i].literal));\n\n                \n\t\t\t\tidentifier_id = creator_id + '-orcid';\n\n\t\t\t\ttriples.push(triple(\n\t\t\t\t  creator_id,\n\t\t\t\t  'http://schema.org/identifier',\n\t\t\t\t  identifier_id));\n\n\t\t\t\ttriples.push(triple(\n\t\t\t\t  identifier_id,\n\t\t\t\t  'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n\t\t\t\t  'http://schema.org/PropertyValue'));\n\n\t\t\t\ttriples.push(triple(\n\t\t\t\t  identifier_id,\n\t\t\t\t  'http://schema.org/propertyID',\n\t\t\t\t  'orcid'));\n\n\t\t\t\ttriples.push(triple(\n\t\t\t\t  identifier_id,\n\t\t\t\t  'http://schema.org/value',\n\t\t\t\t  doc.message.author[i].ORCID\n\t\t\t\t));                \n\t\t\t\n\t\t\tif (type == '') {\n\t\t\t  type = 'http://schema.org/CreativeWork';\n\t\t\t}\n\t\n\n\t\t\t// defaults\n\t\t\ttriples.push(triple(subject_id,\n\t\t\t  'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n\t\t\t  type));\n\t\t\t\n                \n                \n            output(doc, triples);\n\n          }\n        }\n      }\n    }\n  \n}\n\n\nfunction (doc) {\n   if (doc['message-format'] == 'application/vnd.citationstyles.csl+json') {\n      message(doc);\n    }\n}\n// END COUCHDB VIEW"},"orcid-works":{"map":"function (doc) {\n  if (doc['message-format'] == 'application/vnd.citationstyles.csl+json') {\n     emit(doc._id, doc);\n  }\n}"}},"language":"javascript"}
